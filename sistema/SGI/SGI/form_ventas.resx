<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>